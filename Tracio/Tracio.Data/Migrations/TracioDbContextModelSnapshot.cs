// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tracio.Data.Data;

#nullable disable

namespace Tracio.Data.Migrations
{
    [DbContext(typeof(TracioDbContext))]
    partial class TracioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tracio.Data.Entities.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("blogId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogId"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("authorId");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("createdTime");

                    b.Property<int?>("LikeCount")
                        .HasColumnType("int")
                        .HasColumnName("likeCount");

                    b.Property<int?>("TagId")
                        .HasColumnType("int")
                        .HasColumnName("tagId");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedTime");

                    b.HasKey("BlogId")
                        .HasName("PK__Blogs__FA0AA72DECC9C036");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TagId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("Tracio.Data.Entities.BlogCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("categoryName");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.HasKey("CategoryId")
                        .HasName("PK__BlogCate__23CAF1D810C9BAEB");

                    b.ToTable("BlogCategories");
                });

            modelBuilder.Entity("Tracio.Data.Entities.BlogTag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tagId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<string>("TagName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tagName");

                    b.HasKey("TagId")
                        .HasName("PK__BlogTags__50FC01578EDDCA23");

                    b.ToTable("BlogTags");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bookingId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("bookingDate");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notes");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("totalAmount");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("BookingId")
                        .HasName("PK__Bookings__C6D03BCD395AA970");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Tracio.Data.Entities.BookingProduct", b =>
                {
                    b.Property<int>("ProductBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("productBookingId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductBookingId"));

                    b.Property<int?>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("bookingId");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notes");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("subtotal");

                    b.HasKey("ProductBookingId")
                        .HasName("PK__BookingP__DAC8E7610CF4C426");

                    b.HasIndex("BookingId");

                    b.HasIndex("ProductId");

                    b.ToTable("BookingProducts");
                });

            modelBuilder.Entity("Tracio.Data.Entities.BookingService", b =>
                {
                    b.Property<int>("ServiceBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("serviceBookingId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceBookingId"));

                    b.Property<int?>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("bookingId");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notes");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("serviceId");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("subtotal");

                    b.HasKey("ServiceBookingId")
                        .HasName("PK__BookingS__37EED9306FD7CC74");

                    b.HasIndex("BookingId");

                    b.HasIndex("ServiceId");

                    b.ToTable("BookingServices");
                });

            modelBuilder.Entity("Tracio.Data.Entities.ChatOfGroup", b =>
                {
                    b.Property<int>("GroupChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("groupChatId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupChatId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("createdTime");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("groupId");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("GroupChatId")
                        .HasName("PK__ChatOfGr__8453A397ED9ED409");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatOfGroup", (string)null);
                });

            modelBuilder.Entity("Tracio.Data.Entities.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("groupId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("createdTime");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int")
                        .HasColumnName("creatorId");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("GroupName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("groupName");

                    b.Property<int?>("MemberCount")
                        .HasColumnType("int")
                        .HasColumnName("memberCount");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedTime");

                    b.HasKey("GroupId")
                        .HasName("PK__Group__88C1034DE87CDEF9");

                    b.HasIndex("CreatorId");

                    b.ToTable("Group", (string)null);
                });

            modelBuilder.Entity("Tracio.Data.Entities.GroupMember", b =>
                {
                    b.Property<int>("MemberShipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberShipId"));

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("groupId");

                    b.Property<DateTime?>("JoinedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("joinedTime");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("MemberShipId")
                        .HasName("PK__GroupMem__543A6D5BF8456B05");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("GroupMember", (string)null);
                });

            modelBuilder.Entity("Tracio.Data.Entities.GroupRoute", b =>
                {
                    b.Property<int>("GroupRouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("groupRouteId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupRouteId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("groupId");

                    b.Property<int?>("RouteId")
                        .HasColumnType("int")
                        .HasColumnName("routeId");

                    b.Property<DateTime?>("SharedTime")
                        .HasColumnType("datetime");

                    b.HasKey("GroupRouteId")
                        .HasName("PK__GroupRou__D8AC9C3240222212");

                    b.HasIndex("GroupId");

                    b.HasIndex("RouteId");

                    b.ToTable("GroupRoutes");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("condition");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("createdTime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<string>("ProductName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("productName");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<int?>("StockQuantity")
                        .HasColumnType("int")
                        .HasColumnName("stockQuantity");

                    b.HasKey("ProductId")
                        .HasName("PK__Products__2D10D16A751C21D1");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Tracio.Data.Entities.ProductsCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("categoryName");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("CategoryId")
                        .HasName("PK__Products__23CAF1D811636B80");

                    b.ToTable("ProductsCategories");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("reviewId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("createdTime");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<int?>("TargetId")
                        .HasColumnType("int")
                        .HasColumnName("targetId");

                    b.Property<string>("TargetType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("targetType");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("ReviewId")
                        .HasName("PK__Reviews__2ECD6E04338822CD");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("roleId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Permissions")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("permissions");

                    b.Property<string>("RoleName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("roleName");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__CD98462A2BE0A9C9");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("routeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("createdTime");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int")
                        .HasColumnName("creatorId");

                    b.Property<double?>("Distance")
                        .HasColumnType("float")
                        .HasColumnName("distance");

                    b.Property<string>("EndLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("endLocation");

                    b.Property<double?>("EstimatedTime")
                        .HasColumnType("float")
                        .HasColumnName("estimatedTime");

                    b.Property<string>("RouteDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("routeDescription");

                    b.Property<string>("RoutePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("routePath");

                    b.Property<string>("SegmentPolyline")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("segmentPolyline");

                    b.Property<bool?>("SharedWithPublic")
                        .HasColumnType("bit")
                        .HasColumnName("sharedWithPublic");

                    b.Property<string>("StartLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("startLocation");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("StreetList")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RouteId")
                        .HasName("PK__Routes__BAC024C7EE29B214");

                    b.HasIndex("CreatorId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Tracio.Data.Entities.RouteCheckpoint", b =>
                {
                    b.Property<int>("PointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pointId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PointId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<double?>("Lng")
                        .HasColumnType("float")
                        .HasColumnName("lng");

                    b.Property<string>("PointName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pointName");

                    b.Property<int?>("PointNumber")
                        .HasColumnType("int")
                        .HasColumnName("pointNumber");

                    b.Property<int?>("SegmentId")
                        .HasColumnType("int")
                        .HasColumnName("segmentId");

                    b.Property<int?>("SequenceNumber")
                        .HasColumnType("int")
                        .HasColumnName("sequenceNumber");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("PointId")
                        .HasName("PK__RouteChe__4CB435AE529C9236");

                    b.HasIndex("SegmentId");

                    b.ToTable("RouteCheckpoints");
                });

            modelBuilder.Entity("Tracio.Data.Entities.RouteReference", b =>
                {
                    b.Property<int>("ReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("referenceId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReferenceId"));

                    b.Property<int?>("BlogId")
                        .HasColumnType("int")
                        .HasColumnName("blogId");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("RouteId")
                        .HasColumnType("int")
                        .HasColumnName("routeId");

                    b.HasKey("ReferenceId")
                        .HasName("PK__RouteRef__7B826DDEA9D955CB");

                    b.HasIndex("BlogId");

                    b.HasIndex("RouteId");

                    b.ToTable("RouteReferences");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("serviceId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<int?>("Availability")
                        .HasColumnType("int")
                        .HasColumnName("availability");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<double?>("EstimatedTime")
                        .HasColumnType("float")
                        .HasColumnName("estimatedTime");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<double?>("Rating")
                        .HasColumnType("float")
                        .HasColumnName("rating");

                    b.Property<string>("ServiceName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("serviceName");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("ServiceId")
                        .HasName("PK__Services__455070DF61C080D5");

                    b.HasIndex("CategoryId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Tracio.Data.Entities.ServiceCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("categoryName");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("CategoryId")
                        .HasName("PK__ServiceC__23CAF1D8C383CAB7");

                    b.ToTable("ServiceCategories");
                });

            modelBuilder.Entity("Tracio.Data.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("createdTime");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("EmailConfirmationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fullName");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("MemberShipId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phoneNumber");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("roleId");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedTime");

                    b.HasKey("UserId")
                        .HasName("PK__Users__CB9A1CFFE397DAC0");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__AB6E6164B1F52597")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Blog", b =>
                {
                    b.HasOne("Tracio.Data.Entities.User", "Author")
                        .WithMany("Blogs")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("FK__Blogs__authorId__5BE2A6F2");

                    b.HasOne("Tracio.Data.Entities.BlogCategory", "Category")
                        .WithMany("Blogs")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Blogs__categoryI__5CD6CB2B");

                    b.HasOne("Tracio.Data.Entities.BlogTag", "Tag")
                        .WithMany("Blogs")
                        .HasForeignKey("TagId")
                        .HasConstraintName("FK__Blogs__tagId__5DCAEF64");

                    b.Navigation("Author");

                    b.Navigation("Category");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Booking", b =>
                {
                    b.HasOne("Tracio.Data.Entities.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Bookings__userId__3F466844");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tracio.Data.Entities.BookingProduct", b =>
                {
                    b.HasOne("Tracio.Data.Entities.Booking", "Booking")
                        .WithMany("BookingProducts")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__BookingPr__booki__4E88ABD4");

                    b.HasOne("Tracio.Data.Entities.Product", "Product")
                        .WithMany("BookingProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__BookingPr__produ__4D94879B");

                    b.Navigation("Booking");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Tracio.Data.Entities.BookingService", b =>
                {
                    b.HasOne("Tracio.Data.Entities.Booking", "Booking")
                        .WithMany("BookingServices")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__BookingSe__booki__45F365D3");

                    b.HasOne("Tracio.Data.Entities.Service", "Service")
                        .WithMany("BookingServices")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK__BookingSe__servi__44FF419A");

                    b.Navigation("Booking");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Tracio.Data.Entities.ChatOfGroup", b =>
                {
                    b.HasOne("Tracio.Data.Entities.Group", "Group")
                        .WithMany("ChatOfGroups")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK__ChatOfGro__group__693CA210");

                    b.HasOne("Tracio.Data.Entities.User", "User")
                        .WithMany("ChatOfGroups")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__ChatOfGro__userI__68487DD7");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Group", b =>
                {
                    b.HasOne("Tracio.Data.Entities.User", "Creator")
                        .WithMany("Groups")
                        .HasForeignKey("CreatorId")
                        .HasConstraintName("FK__Group__creatorId__619B8048");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Tracio.Data.Entities.GroupMember", b =>
                {
                    b.HasOne("Tracio.Data.Entities.Group", "Group")
                        .WithMany("GroupMembers")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK__GroupMemb__group__6477ECF3");

                    b.HasOne("Tracio.Data.Entities.User", "User")
                        .WithMany("GroupMembers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__GroupMemb__userI__656C112C");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tracio.Data.Entities.GroupRoute", b =>
                {
                    b.HasOne("Tracio.Data.Entities.Group", "Group")
                        .WithMany("GroupRoutes")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK__GroupRout__group__75A278F5");

                    b.HasOne("Tracio.Data.Entities.Route", "Route")
                        .WithMany("GroupRoutes")
                        .HasForeignKey("RouteId")
                        .HasConstraintName("FK__GroupRout__route__76969D2E");

                    b.Navigation("Group");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Product", b =>
                {
                    b.HasOne("Tracio.Data.Entities.ProductsCategory", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Products__catego__4AB81AF0");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Review", b =>
                {
                    b.HasOne("Tracio.Data.Entities.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Reviews__userId__5165187F");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Route", b =>
                {
                    b.HasOne("Tracio.Data.Entities.User", "Creator")
                        .WithMany("Routes")
                        .HasForeignKey("CreatorId")
                        .HasConstraintName("FK__Routes__creatorI__6C190EBB");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Tracio.Data.Entities.RouteCheckpoint", b =>
                {
                    b.HasOne("Tracio.Data.Entities.Route", "Segment")
                        .WithMany("RouteCheckpoints")
                        .HasForeignKey("SegmentId")
                        .HasConstraintName("FK__RouteChec__segme__6EF57B66");

                    b.Navigation("Segment");
                });

            modelBuilder.Entity("Tracio.Data.Entities.RouteReference", b =>
                {
                    b.HasOne("Tracio.Data.Entities.Blog", "Blog")
                        .WithMany("RouteReferences")
                        .HasForeignKey("BlogId")
                        .HasConstraintName("FK__RouteRefe__blogI__71D1E811");

                    b.HasOne("Tracio.Data.Entities.Route", "Route")
                        .WithMany("RouteReferences")
                        .HasForeignKey("RouteId")
                        .HasConstraintName("FK__RouteRefe__route__72C60C4A");

                    b.Navigation("Blog");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Service", b =>
                {
                    b.HasOne("Tracio.Data.Entities.ServiceCategory", "Category")
                        .WithMany("Services")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Services__catego__4222D4EF");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Tracio.Data.Entities.User", b =>
                {
                    b.HasOne("Tracio.Data.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__Users__roleId__3A81B327");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Blog", b =>
                {
                    b.Navigation("RouteReferences");
                });

            modelBuilder.Entity("Tracio.Data.Entities.BlogCategory", b =>
                {
                    b.Navigation("Blogs");
                });

            modelBuilder.Entity("Tracio.Data.Entities.BlogTag", b =>
                {
                    b.Navigation("Blogs");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Booking", b =>
                {
                    b.Navigation("BookingProducts");

                    b.Navigation("BookingServices");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Group", b =>
                {
                    b.Navigation("ChatOfGroups");

                    b.Navigation("GroupMembers");

                    b.Navigation("GroupRoutes");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Product", b =>
                {
                    b.Navigation("BookingProducts");
                });

            modelBuilder.Entity("Tracio.Data.Entities.ProductsCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Route", b =>
                {
                    b.Navigation("GroupRoutes");

                    b.Navigation("RouteCheckpoints");

                    b.Navigation("RouteReferences");
                });

            modelBuilder.Entity("Tracio.Data.Entities.Service", b =>
                {
                    b.Navigation("BookingServices");
                });

            modelBuilder.Entity("Tracio.Data.Entities.ServiceCategory", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Tracio.Data.Entities.User", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("Bookings");

                    b.Navigation("ChatOfGroups");

                    b.Navigation("GroupMembers");

                    b.Navigation("Groups");

                    b.Navigation("Reviews");

                    b.Navigation("Routes");
                });
#pragma warning restore 612, 618
        }
    }
}
